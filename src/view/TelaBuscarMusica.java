/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.HistoricoDAO;
import dao.MusicaDAO;
import model.Musica;
import model.Usuario;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import model.Historico;

/**
 *
 * @author dante
 */
public class TelaBuscarMusica extends javax.swing.JFrame {
    
    private Usuario usuario;
    private DefaultTableModel modelo;
    private List<Musica> listaResultados = new ArrayList<>();

    /**
     * Creates new form TelaBuscarMusica
     */
    public TelaBuscarMusica(Usuario usuarioLogado) {
        this.usuario = usuarioLogado;
        initComponents();
        
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(700, 595);
        
        modelo = new DefaultTableModel();
        modelo.addColumn("Nome");
        modelo.addColumn("Artista");
        modelo.addColumn("Gênero");

        tabela.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFiltrarPor = new javax.swing.JLabel();
        txtBusca = new javax.swing.JTextField();
        cmbFiltro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnCurtir = new javax.swing.JButton();
        btnDescurtir = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        lblBuscar = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lblFiltrarPor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFiltrarPor.setText("Filtrar por:");
        getContentPane().add(lblFiltrarPor);
        lblFiltrarPor.setBounds(30, 90, 70, 30);

        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });
        getContentPane().add(txtBusca);
        txtBusca.setBounds(80, 40, 470, 30);

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nome", "artista", "genero" }));
        cmbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltroActionPerformed(evt);
            }
        });
        getContentPane().add(cmbFiltro);
        cmbFiltro.setBounds(100, 90, 80, 30);

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Artista", "Gênero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setResizable(false);
            tabela.getColumnModel().getColumn(1).setResizable(false);
            tabela.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 140, 640, 330);

        btnCurtir.setText("Curtir");
        btnCurtir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCurtirActionPerformed(evt);
            }
        });
        getContentPane().add(btnCurtir);
        btnCurtir.setBounds(170, 490, 140, 40);

        btnDescurtir.setText("Descurtir");
        btnDescurtir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescurtirActionPerformed(evt);
            }
        });
        getContentPane().add(btnDescurtir);
        btnDescurtir.setBounds(360, 490, 140, 40);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(580, 40, 90, 30);

        lblBuscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBuscar.setText("Buscar:");
        getContentPane().add(lblBuscar);
        lblBuscar.setBounds(30, 40, 50, 30);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar);
        btnVoltar.setBounds(590, 520, 90, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFiltroActionPerformed

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnCurtirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCurtirActionPerformed
        curtir();
    }//GEN-LAST:event_btnCurtirActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
    new TelaPrincipal(usuario).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnDescurtirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescurtirActionPerformed
        descurtir();
    }//GEN-LAST:event_btnDescurtirActionPerformed

    /**
     * @param args the command line arguments
     */
    private void buscar() {
        try {
            String termo = txtBusca.getText();
            String campo = (String) cmbFiltro.getSelectedItem();
            MusicaDAO dao = new MusicaDAO();
            listaResultados = dao.buscar(termo, campo);
            modelo.setRowCount(0);
            HistoricoDAO hdao = new HistoricoDAO();
            for (Musica m : listaResultados) {
                modelo.addRow(new Object[]{m.getNome(), m.getArtista(), m.getGenero()});
                
                Historico h = new Historico(usuario.getId(), m.getId());
                hdao.registrarBusca(h);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }

    private void curtir() {
        int row = tabela.getSelectedRow();
        if (row == -1) return;
        try {
            Musica m = listaResultados.get(row);
            MusicaDAO dao = new MusicaDAO();
            if (!dao.isCurtida(usuario.getId(), m.getId())) {
                dao.curtir(usuario.getId(), m.getId());
                JOptionPane.showMessageDialog(this, "Música curtida!");
            } else {
                JOptionPane.showMessageDialog(this, "Você já curtiu essa música.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }

    private void descurtir() {
        int row = tabela.getSelectedRow();
        if (row == -1) return;
        try {
            Musica m = listaResultados.get(row);
            MusicaDAO dao = new MusicaDAO();
            if (dao.isCurtida(usuario.getId(), m.getId())) {
                dao.descurtir(usuario.getId(), m.getId());
                JOptionPane.showMessageDialog(this, "Música descurtida!");
            } else {
                JOptionPane.showMessageDialog(this, "Você ainda não curtiu essa música.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCurtir;
    private javax.swing.JButton btnDescurtir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblFiltrarPor;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtBusca;
    // End of variables declaration//GEN-END:variables
}
